// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"

	bson "github.com/globalsign/mgo/bson"

	mock "github.com/stretchr/testify/mock"

	models "github.com/ProtocolONE/auth1.protocol.one/pkg/models"
)

// AppIdentityProviderServiceInterface is an autogenerated mock type for the AppIdentityProviderServiceInterface type
type AppIdentityProviderServiceInterface struct {
	mock.Mock
}

// FindByType provides a mock function with given fields: _a0, _a1
func (_m *AppIdentityProviderServiceInterface) FindByType(_a0 *models.Application, _a1 string) []*models.AppIdentityProvider {
	ret := _m.Called(_a0, _a1)

	var r0 []*models.AppIdentityProvider
	if rf, ok := ret.Get(0).(func(*models.Application, string) []*models.AppIdentityProvider); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.AppIdentityProvider)
		}
	}

	return r0
}

// FindByTypeAndName provides a mock function with given fields: _a0, _a1, _a2
func (_m *AppIdentityProviderServiceInterface) FindByTypeAndName(_a0 *models.Application, _a1 string, _a2 string) *models.AppIdentityProvider {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 *models.AppIdentityProvider
	if rf, ok := ret.Get(0).(func(*models.Application, string, string) *models.AppIdentityProvider); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.AppIdentityProvider)
		}
	}

	return r0
}

// Get provides a mock function with given fields: _a0, _a1
func (_m *AppIdentityProviderServiceInterface) Get(_a0 *models.Application, _a1 bson.ObjectId) *models.AppIdentityProvider {
	ret := _m.Called(_a0, _a1)

	var r0 *models.AppIdentityProvider
	if rf, ok := ret.Get(0).(func(*models.Application, bson.ObjectId) *models.AppIdentityProvider); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.AppIdentityProvider)
		}
	}

	return r0
}

// GetAllTemplates provides a mock function with given fields:
func (_m *AppIdentityProviderServiceInterface) GetAllTemplates() []*models.AppIdentityProvider {
	ret := _m.Called()

	var r0 []*models.AppIdentityProvider
	if rf, ok := ret.Get(0).(func() []*models.AppIdentityProvider); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.AppIdentityProvider)
		}
	}

	return r0
}

// GetAuthUrl provides a mock function with given fields: _a0, _a1, _a2
func (_m *AppIdentityProviderServiceInterface) GetAuthUrl(_a0 string, _a1 *models.AppIdentityProvider, _a2 interface{}) (string, error) {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, *models.AppIdentityProvider, interface{}) string); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, *models.AppIdentityProvider, interface{}) error); ok {
		r1 = rf(_a0, _a1, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAvailableTemplates provides a mock function with given fields:
func (_m *AppIdentityProviderServiceInterface) GetAvailableTemplates() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// GetSocialProfile provides a mock function with given fields: _a0, _a1, _a2, _a3
func (_m *AppIdentityProviderServiceInterface) GetSocialProfile(_a0 context.Context, _a1 string, _a2 string, _a3 *models.AppIdentityProvider) (*models.UserIdentitySocial, error) {
	ret := _m.Called(_a0, _a1, _a2, _a3)

	var r0 *models.UserIdentitySocial
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *models.AppIdentityProvider) *models.UserIdentitySocial); ok {
		r0 = rf(_a0, _a1, _a2, _a3)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.UserIdentitySocial)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string, *models.AppIdentityProvider) error); ok {
		r1 = rf(_a0, _a1, _a2, _a3)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTemplate provides a mock function with given fields: _a0
func (_m *AppIdentityProviderServiceInterface) GetTemplate(_a0 string) (*models.AppIdentityProvider, error) {
	ret := _m.Called(_a0)

	var r0 *models.AppIdentityProvider
	if rf, ok := ret.Get(0).(func(string) *models.AppIdentityProvider); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.AppIdentityProvider)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NormalizeSocialConnection provides a mock function with given fields: _a0
func (_m *AppIdentityProviderServiceInterface) NormalizeSocialConnection(_a0 *models.AppIdentityProvider) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.AppIdentityProvider) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
