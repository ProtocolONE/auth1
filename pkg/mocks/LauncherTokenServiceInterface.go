// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	models "github.com/ProtocolONE/auth1.protocol.one/pkg/models"
	mock "github.com/stretchr/testify/mock"
)

// LauncherTokenServiceInterface is an autogenerated mock type for the LauncherTokenServiceInterface type
type LauncherTokenServiceInterface struct {
	mock.Mock
}

// Get provides a mock function with given fields: key, obj
func (_m *LauncherTokenServiceInterface) Get(key string, obj interface{}) error {
	ret := _m.Called(key, obj)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}) error); ok {
		r0 = rf(key, obj)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Set provides a mock function with given fields: key, obj, settings
func (_m *LauncherTokenServiceInterface) Set(key string, obj interface{}, settings *models.LauncherTokenSettings) error {
	ret := _m.Called(key, obj, settings)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}, *models.LauncherTokenSettings) error); ok {
		r0 = rf(key, obj, settings)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Use provides a mock function with given fields: key, obj
func (_m *LauncherTokenServiceInterface) Use(key string, obj interface{}) error {
	ret := _m.Called(key, obj)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}) error); ok {
		r0 = rf(key, obj)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
