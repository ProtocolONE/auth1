// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	bson "github.com/globalsign/mgo/bson"
	mock "github.com/stretchr/testify/mock"

	models "github.com/ProtocolONE/auth1.protocol.one/pkg/models"
)

// ApplicationServiceInterface is an autogenerated mock type for the ApplicationServiceInterface type
type ApplicationServiceInterface struct {
	mock.Mock
}

// AddIdentityProvider provides a mock function with given fields: _a0, _a1
func (_m *ApplicationServiceInterface) AddIdentityProvider(_a0 *models.Application, _a1 *models.AppIdentityProvider) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Application, *models.AppIdentityProvider) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Create provides a mock function with given fields: _a0
func (_m *ApplicationServiceInterface) Create(_a0 *models.Application) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Application) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: _a0
func (_m *ApplicationServiceInterface) Get(_a0 bson.ObjectId) (*models.Application, error) {
	ret := _m.Called(_a0)

	var r0 *models.Application
	if rf, ok := ret.Get(0).(func(bson.ObjectId) *models.Application); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Application)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(bson.ObjectId) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// LoadMfaConnection provides a mock function with given fields: _a0
func (_m *ApplicationServiceInterface) LoadMfaConnection(_a0 string) ([]*models.MfaConnection, error) {
	ret := _m.Called(_a0)

	var r0 []*models.MfaConnection
	if rf, ok := ret.Get(0).(func(string) []*models.MfaConnection); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.MfaConnection)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// LoadSocialSettings provides a mock function with given fields:
func (_m *ApplicationServiceInterface) LoadSocialSettings() (*models.SocialSettings, error) {
	ret := _m.Called()

	var r0 *models.SocialSettings
	if rf, ok := ret.Get(0).(func() *models.SocialSettings); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.SocialSettings)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Update provides a mock function with given fields: _a0
func (_m *ApplicationServiceInterface) Update(_a0 *models.Application) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Application) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateIdentityProvider provides a mock function with given fields: _a0, _a1
func (_m *ApplicationServiceInterface) UpdateIdentityProvider(_a0 *models.Application, _a1 *models.AppIdentityProvider) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Application, *models.AppIdentityProvider) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
